version: '3.8'

services:
  # NGINX Reverse Proxy - The new public entrypoint for the application
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: legal-nginx
    ports:
      - "0.0.0.0:8087:80" # Expose Nginx on port 80
    depends_on:
      - frontend
      - backend
    networks:
      - legal-net

  # FastAPI Backend (No changes to the service itself, just removing the 'ports' mapping)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: legal-backend
    # ports are removed - traffic comes from Nginx
    secrets:
      - gcp_key  
    env_file:
      - ./.env 
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/run/secrets/gcp_key 
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend/key.json:/app/key.json:ro
      - ./uploads:/app/uploads
      - ./backend/main.py:/app/main.py
    restart: unless-stopped
    networks:
      - legal-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/docs"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Flask Frontend (Removing 'ports' mapping)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: legal-frontend
    # ports are removed - traffic comes from Nginx
    volumes:
     - ./frontend:/app
    env_file :
      - ./.env   
    environment:
      # This is still useful if the flask app needs to know the backend URL for other reasons.
      - BACKEND_URL=http://backend:3000
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - legal-net

  # Redis Cache (No changes here)
  redis:
    image: redis:7-alpine
    container_name: legal-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - legal-net
  cloudflared:
      build:
        context: ./cloudflared 
        dockerfile: dockerfile
      container_name: cloudflared_tunnel
      restart: always
      networks:
        - legal-net
      volumes:
        - ./cloudflared:/home/nonroot/.cloudflared 
   
volumes:
  redis_data:

networks: 
  legal-net:
    driver: bridge

secrets:
  gcp_key : 
    file: ./backend/key.json

